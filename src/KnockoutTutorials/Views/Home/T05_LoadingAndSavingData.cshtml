@{
    ViewBag.Title = "Loading and Saving Data";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/custom/loadingsaving.css" rel="stylesheet" type="text/css" />

@if (false)
{ 
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script src="~/Scripts/knockout-2.0.0.js"></script>
}

<div class="loadingsaving">
    <h3>Tasks</h3>

    <form data-bind="submit: addTask">
        Add task: <input data-bind="value: newTaskText" placeholder="What needs to be done?" />
        <button type="submit">Add</button>
    </form>

    <ul data-bind="foreach: tasks, visible: tasks().length > 0">
        <li>
            <input type="checkbox" data-bind="checked: isDone" />
            <input data-bind="value: title, disable: isDone" />
            <a href="#" data-bind="click: $parent.removeTask">Delete</a>
        </li>
    </ul>

    You have <b data-bind="text: incompleteTasks().length">&nbsp;</b> incomplete task(s)
    <span data-bind="visible: incompleteTasks().length == 0"> - it's beer time!</span>

    <button data-bind="click: save">Save</button>
</div>
<script type='text/javascript'>
    function Task(data) {
        this.title = ko.observable(data.title);
        this.isDone = ko.observable(data.isDone);
    }

    function TaskListViewModel() {
        //Data
        var self = this;
        self.tasks = ko.observableArray([]);
        self.newTaskText = ko.observable();
        self.incompleteTasks = ko.computed(function () {
            return ko.utils.arrayFilter(self.tasks(), function (task) { return !task.isDone() && !task._destroy });
        });

        //Operations
        self.addTask = function () {
            self.tasks.push(new Task({ title: this.newTaskText() }));
            self.newTaskText("");
        };
        self.removeTask = function (task) { self.tasks.destroy(task) };

        $.getJSON("/Home/Tasks", function (allData) {
            var mappedTasks = $.map(allData, function (item) { return new Task(item) });
            self.tasks(mappedTasks);
        });

        self.save = function () {
            $.ajax("/Home/Tasks", {
                data: ko.toJSON({ tasks: self.tasks }),
                type: "post", contentType: "application/json",
                success: function(result) { alert(result) }
            });
        };
    }

    ko.applyBindings(new TaskListViewModel());
</script>
